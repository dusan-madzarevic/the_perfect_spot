package sbnz.integracija;

import com.ftn.uns.ac.rs.theperfectmeal.model.Recipe;
import com.ftn.uns.ac.rs.theperfectmeal.model.RecipeGrade;
import java.time.LocalDate;
import java.util.List;

global List<Recipe> bestGradedLastMonth;

global List<Recipe> bestGraded;

rule "Best graded recepies - last month"
	agenda-group "best-graded-report-lastMonth"
	salience $total
	when
		$recipe: Recipe($grades: recipeGrades)
		$total : Double() from accumulate(
	         RecipeGrade(date.isAfter(LocalDate.now().minusMonths(1)) == true ,  $val: value ) from  $grades,
	       	 average($val))
	then
		bestGradedLastMonth.add($recipe);
		System.out.println($recipe.getRecipeName() + ": " + $total);
end;

rule "Best graded recepies - all the time"
	agenda-group "best-graded-report"
	salience $total
	when
		$recipe: Recipe($grades: recipeGrades)
		$total : Double() from accumulate(
	         RecipeGrade( $val: value ) from  $grades,
	         init( double total = 0; ),
	         action( total = total + $val; ),
	         reverse( total = total - ( $val ); ),
	         result( new Double( total / $grades.size() ) ) )
	then
		bestGraded.add($recipe);
		System.out.println($recipe.getRecipeName() + ": " + $total);
end;