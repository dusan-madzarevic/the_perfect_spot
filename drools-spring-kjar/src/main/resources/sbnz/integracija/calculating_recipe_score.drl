package sbnz.integracija;

import com.ftn.uns.ac.rs.theperfectmeal.model.Recipe;
import java.util.List;

global Recipe topRecipe;

declare FoundRecipe
end

rule "THE PERFECT Recipes"
	agenda-group "Calculating recipe score"
	salience ($aleS * 100 + $typeS * 10 + $diffS + $servingS + $calS + $ingS + $gradeS + $bGradeS * 10)
	when
		$recC: RecipeCompatibility($recId: recipeId)
		TypeScore(recipeId == $recId, $typeS: typeScore)
		DifficultyScore(recipeId == $recId, $diffS: difficultyScore)
		ServingScore(recipeId == $recId, $servingS: servingScore)
		CalorieScore(recipeId == $recId, $calS: calorieScore)
		//TimeScore(recipeId == $recId, $timeS: timeScore)
		IngredientScore(recipeId == $recId, $ingS: ingredientScore)
		AlergyScore(recipeId == $recId, $aleS: alergyScore)
		RecipeGradeScore(recipeId == $recId, $gradeS: gradeScore)
		BonusGradeScore(recipeId == $recId, $bGradeS: bonusGradeScore)
		$topRecipe: Recipe(recipeId== $recId)
		not FoundRecipe()
	then
		System.out.println("TypeScore: "+$typeS);
		System.out.println("DifficultyScore: "+$diffS);
		System.out.println("ServingScore: "+$servingS);
		System.out.println("CalorieScore: "+$calS);
		System.out.println("IngredientScore: "+$ingS);
		//System.out.println("TimeScore: "+$timeS);
		System.out.println("AlergyScore: "+$aleS);
		System.out.println("GradeScore: "+$gradeS);
		System.out.println("BonusGradeScore: "+$bGradeS);
		System.out.println("Recipe "+$topRecipe.getRecipeName()+" with score "+ ($aleS * 100 + $typeS * 10 + $diffS + $servingS + $calS + $ingS + $gradeS + $bGradeS * 10)+" is choosen.");
		drools.getKnowledgeRuntime().setGlobal("topRecipe", $topRecipe);
		insert(new FoundRecipe());

	
end




